{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","reorderedGoods","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAlCR,SACEC,EACAH,EACAH,GAEA,IAAMO,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQP,GACN,KAAMP,EAASe,SACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAMd,EAASiB,OACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITd,GACFO,EAAaQ,UAIfC,QAAQC,IAAId,EAAUH,GAEfO,EAOgBW,CACrBrB,EACAM,EACAH,GAoBF,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,SAAU,UAAW,CAC9B,WAAYlB,IAAaP,EAASe,WAGtCW,QA3Be,WACrBlB,EAAYR,EAASe,WAmBjB,iCAYA,wBACES,KAAK,SACLD,UACEE,IAAW,SAAU,aAAc,CACjC,WAAYlB,IAAaP,EAASiB,SAGtCS,QAnCa,WACnBlB,EAAYR,EAASiB,SA2BjB,4BAYA,wBACEO,KAAK,SACLD,UACEE,IAAW,SAAU,aAAc,CACjC,YAAarB,IAGjBsB,QA3CQ,WACdrB,GAAYD,IAmCR,sBAYEA,GAAcG,IAAaP,EAASM,OACpC,wBACEkB,KAAK,SACLD,UAAU,4BACVG,QAhDI,WACZlB,EAAYR,EAASM,MACrBD,GAAW,IA2CL,sBAWJ,6BAEII,EAAekB,KAAI,SAACC,GAAD,OACjB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCtInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.875264d6.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case (SortType.ALPHABET):\n        return good1.localeCompare(good2);\n\n      case (SortType.LENGTH):\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer,\n    sortType,\n    isReversed,\n  );\n\n  const sortByAlphaber = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    setReverse(!isReversed);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames('button', 'is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })\n          }\n          onClick={sortByAlphaber}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button', 'is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })\n          }\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button', 'is-warning', {\n              'is-light': !isReversed,\n            })\n          }\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        {\n          reorderedGoods.map((good: string) => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}